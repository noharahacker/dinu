def dfs(graph, start, visited=None):
    if visited is None:
        visited = set()
    visited.add(start)
    print(start, end=" ")

    for neighbor in graph[start]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

# Taking input from user to create the graph
def create_graph():
    graph = {}
    vertices = int(input("Enter the number of vertices: "))

    for _ in range(vertices):
        vertex = input("Enter vertex: ")
        neighbors = input(f"Enter neighbors of vertex {vertex} separated by space: ").split()
        graph[vertex] = neighbors

    return graph

if name == "main":
    graph = create_graph()
    start_vertex = input("Enter the start vertex for DFS: ")
    print("DFS Traversal:")
    dfs(graph, start_vertex)
